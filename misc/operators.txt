# Miscellaneous Operators
proc bind proc
Replace operator names in proc with operators; perform idiom recognition
– null null
Push null on stack
– version string
Return interpreter version
– realtime int
Return real time in milliseconds
– usertime int
Return execution time in milliseconds
– languagelevel int
Return LanguageLevel
– product string
Return product name
– revision int
Return product revision level
– serialnumber int
Return machine serial number
– executive –
Invoke interactive executive
bool echo –
Turn echoing on or off
– prompt –
Executed when ready for interactive input

## Graphics State Operators (Device-Independent)
– gsave –
Push graphics state
– grestore –
Pop graphics state
– clipsave –
Push clipping path
– cliprestore –
Pop clipping path
– grestoreall –
Pop to bottommost graphics state
– initgraphics –
Reset graphics state parameters
– gstate gstate
Create graphics state object
gstate setgstate –
Set graphics state from gstate
gstate currentgstate gstate
Copy current graphics state into gstate
num setlinewidth –
Set line width
– currentlinewidth num
Return current line width
int setlinecap –
Set shape of line ends for stroke (0 = butt, 1 = round, 2 = square)
– currentlinecap int
Return current line cap
int setlinejoin –
Set shape of corners for stroke (0 = miter, 1 = round, 2 = bevel)
– currentlinejoin int
Return current line join
num setmiterlimit –
Set miter length limit
– currentmiterlimit num
Return current miter limit
bool setstrokeadjust –
Set stroke adjustment (false = disable, true = enable)
– currentstrokeadjust bool
Return current stroke adjustment
array offset setdash –
Set dash pattern for stroking
– currentdash array offset
Return current dash pattern
array|name setcolorspace –
Set color space
– currentcolorspace array
Return current color space
comp1 … compn setcolor –
Set color components
pattern setcolor –
Set colored tiling pattern as current color
comp1 … compn pattern setcolor –
Set uncolored tiling pattern as current color
– currentcolor comp1 … compn
Return current color components
num setgray –
Set color space to DeviceGray and color to speciﬁed gray value (0 = black, 1 = white)
– currentgray num
Return current color as gray value
hue saturation brightness sethsbcolor –
Set color space to DeviceRGB and color to speciﬁed hue, saturation, brightness
– currenthsbcolor hue saturation brightness
Return current color as hue, saturation, brightness
red green blue setrgbcolor –
Set color space to DeviceRGB and color to speciﬁed red, green, blue
– currentrgbcolor red green blue
Return current color as red, green, blue
cyan magenta yellow black setcmykcolor –
Set color space to DeviceCMYK and color to speciﬁed cyan, magenta, yellow, black
– currentcmykcolor cyan magenta yellow black
Return current color as cyan, magenta, yellow, black

## Graphics State Operators (Device-Dependent)
halftone sethalftone –
Set halftone dictionary
– currenthalftone halftone
Return current halftone dictionary
frequency angle proc setscreen –
Set gray halftone screen by frequency, angle,
and spot function
frequency angle halftone setscreen –
Set gray halftone screen from halftone
dictionary
– currentscreen frequency angle proc|halftone
Return current gray halftone screen
redfreq redang redproc|redhalftone
greenfreq greenang greenproc|greenhalftone
bluefreq blueang blueproc|bluehalftone
grayfreq grayang grayproc|grayhalftone setcolorscreen –
Set all four halftone screens
– currentcolorscreen redfreq redang redproc|redhalftone
greenfreq greenang greenproc|greenhalftone
bluefreq blueang blueproc|bluehalftone
grayfreq grayang grayproc|grayhalftone
Return all four halftone screens
proc settransfer –
Set gray transfer function
– currenttransfer proc
Return current gray transfer function
redproc greenproc blueproc grayproc setcolortransfer –
Set all four transfer functions
– currentcolortransfer redproc greenproc blueproc grayproc
Return current transfer functions
proc setblackgeneration –
Set black-generation function
– currentblackgeneration proc
Return current black-generation function
proc setundercolorremoval –
Set undercolor-removal function
– currentundercolorremoval proc
Return current undercolor-removal
function
dict setcolorrendering –
Set CIE-based color rendering dictionary
– currentcolorrendering dict
Return current CIE-based color rendering
dictionary
num setﬂat –
Set ﬂatness tolerance
– currentﬂat num
Return current ﬂatness
bool setoverprint –
Set overprint parameter
– currentoverprint bool
Return current overprint parameter
num setsmoothness –
Set smoothness parameter
– currentsmoothness num
Return current smoothness parameter

## Coordinate System and Matrix Operators
– matrix matrix
Create identity matrix
– initmatrix –
Set CTM to device default
matrix identmatrix matrix
Fill matrix with identity transform
matrix defaultmatrix matrix
Fill matrix with device default matrix
matrix currentmatrix matrix
Fill matrix with CTM
matrix setmatrix –
Replace CTM by matrix
t x t y translate –
Translate user space by (t x , t y)
t x t y matrix translate matrix
Deﬁne translation by (t x , t y)
sx sy scale –
Scale user space by sx and sy
sx sy matrix scale matrix
Deﬁne scaling by sx and sy
angle rotate –
Rotate user space by angle degrees
angle matrix rotate matrix
Deﬁne rotation by angle degrees
matrix concat –
Replace CTM by matrix × CTM
matrix1 matrix2 matrix3 concatmatrix matrix3
Fill matrix3 with matrix1 × matrix2
x y transform x′ y′
Transform (x, y) by CTM
x y matrix transform x′ y′
Transform (x, y) by matrix
dx dy dtransform dx′ dy′
Transform distance (dx, dy) by CTM
dx dy matrix dtransform dx′ dy′
Transform distance (dx, dy) by matrix
x′ y′ itransform x y
Perform inverse transform of (x′, y′) by CTM
x′ y′ matrix itransform x y
Perform inverse transform of (x′, y′) by matrix
dx′ dy′ idtransform dx dy
Perform inverse transform of distance (dx′, dy′) by CTM
dx′ dy′ matrix idtransform dx dy
Perform inverse transform of distance (dx′, dy′) by matrix
matrix1 matrix2 invertmatrix matrix2
Fill matrix2 with inverse of matrix1

## Path Construction Operators
– newpath –
Initialize current path to be empty
– currentpoint x y
Return current point coordinates
x y moveto –
Set current point to (x, y)
dx dy rmoveto –
Perform relative moveto
x y lineto –
Append straight line to (x, y)
dx dy rlineto –
Perform relative lineto
x y r angle1 angle2 arc –
Append counterclockwise arc
x y r angle1 angle2 arcn –
Append clockwise arc
x1 y1 x2 y2 r arct –
Append tangent arc
x1 y1 x2 y2 r arcto xt1 yt1 xt2 yt2
Append tangent arc
x1 y1 x2 y2 x3 y3 curveto –
Append Bézier cubic section
dx1 dy1 dx2 dy2 dx3 dy3 rcurveto –
Perform relative curveto
– closepath –
Connect subpath back to its starting point
– ﬂattenpath –
Convert curves to sequences of straight lines
– reversepath –
Reverse direction of current path
– strokepath –
Compute outline of stroked path
userpath ustrokepath –
Compute outline of stroked userpath
userpath matrix ustrokepath –
Compute outline of stroked userpath
string bool charpath –
Append glyph outline to current path
userpath uappend –
Interpret userpath and append to current path
– clippath –
Set current path to clipping path
llx lly ur x ur y setbbox –
Set bounding box for current path
– pathbbox llx lly ur x ur y
Return bounding box of current path
move line curve close pathforall –
Enumerate current path
bool upath userpath
Create userpath for current path; include ucache if bool is true
– initclip –
Set clipping path to device default
– clip –
Clip using nonzero winding number rule
– eoclip –
Clip using even-odd rule
x y width height rectclip –
Clip with rectangular path
numarray|numstring rectclip –
Clip with rectangular paths
– ucache –
Declare that user path is to be cached

## Painting Operators
– erasepage –
Paint current page white
– stroke –
Draw line along current path
– ﬁll –
Fill current path with current color
– eoﬁll –
Fill using even-odd rule
x y width height rectstroke –
Deﬁne rectangular path and stroke
x y width height matrix rectstroke –
Deﬁne rectangular path, concatenate matrix, and stroke
numarray|numstring rectstroke –
Deﬁne rectangular paths and stroke
numarray|numstring matrix rectstroke –
Deﬁne rectangular paths, concatenate matrix, and stroke
x y width height rectﬁll –
Fill rectangular path
numarray|numstring rectﬁll –
Fill rectangular paths
userpath ustroke –
Interpret and stroke userpath
userpath matrix ustroke –
Interpret userpath, concatenate matrix, and stroke
userpath uﬁll –
Interpret and ﬁll userpath
userpath ueoﬁll –
Fill userpath using even-odd rule
dict shﬁll –
Fill area deﬁned by shading pattern
dict image –
Paint any sampled image
width height bits/sample matrix datasrc image –
Paint monochrome sampled image
width height bits/comp matrix
datasrc0 … datasrcncomp−1 multi ncomp colorimage –
Paint color sampled image
dict imagemask –
Paint current color through mask
width height polarity matrix datasrc imagemask –
Paint current color through mask

## Insideness-Testing Operators
x y inﬁll bool
Test whether (x, y) would be painted by ﬁll
userpath inﬁll bool
Test whether pixels in userpath would be painted by ﬁll
x y ineoﬁll bool
Test whether (x, y) would be painted by eoﬁll
userpath ineoﬁll bool
Test whether pixels in userpath would be painted by eoﬁll
x y userpath inuﬁll bool
Test whether (x, y) would be painted by uﬁll of userpath
userpath1 userpath2 inuﬁll bool
Test whether pixels in userpath1 would be painted by uﬁll of userpath2
x y userpath inueoﬁll bool
Test whether (x, y) would be painted by ueoﬁll of userpath
userpath1 userpath2 inueoﬁll bool
Test whether pixels in userpath1 would be painted by ueoﬁll of userpath2
x y instroke bool
Test whether (x, y) would be painted by stroke
x y userpath inustroke bool
Test whether (x, y) would be painted by ustroke of userpath
x y userpath matrix inustroke bool
Test whether (x, y) would be painted by ustroke of userpath
userpath1 userpath2 inustroke bool
Test whether pixels in userpath1 would be painted by ustroke of userpath2
userpath1 userpath2 matrix inustroke bool
Test whether pixels in userpath1 would be painted by ustroke of userpath2

## Form and Pattern Operators
pattern matrix makepattern pattern’
Create pattern instance from prototype
pattern setpattern –
Install pattern as current color
comp1 … compn pattern setpattern –
Install pattern as current color
form execform –
Paint form

## Device Setup and Output Operators
– showpage –
Transmit and reset current page
– copypage –
Transmit current page
dict setpagedevice –
Install page-oriented output device
– currentpagedevice dict
Return current page device parameters
– nulldevice –
Install no-output device

## Glyph and Font Operators
key font|cidfont deﬁnefont font|cidfont
Register font|cidfont in Font resource
category
key name|string|dict array composefont font
Register composite font dictionary created from CMap and array of CIDFonts or fonts
key undeﬁnefont –
Remove Font resource registration
key ﬁndfont font|cidfont
Return Font resource instance identiﬁed by key
font|cidfont scale scalefont font′|cidfont′
Scale font|cidfont by scale to produce font′|cidfont′
font|cidfont matrix makefont font′|cidfont′
Transform font|cidfont by matrix to produce font′|cidfont′
font|cidfont setfont –
Set font or CIDFont in graphics state
– rootfont font|cidfont
Return last set font or CIDFont
– currentfont font|cidfont
Return current font or CIDFont, possibly a descendant of rootfont
key scale|matrix selectfont –
Set font or CIDFont given name and transform
string show –
Paint glyphs for string in current font
a x ay string ashow –
Add (a x , ay) to width of each glyph while showing string
cx c y char string widthshow –
Add (cx , c y) to width of glyph for char while showing string
cx c y char ax ay string awidthshow –
Combine effects of ashow and widthshow
string numarray|numstring xshow –
Paint glyphs for string using x widths in numarray|numstring
string numarray|numstring xyshow –
Paint glyphs for string using x and y widths in numarray|numstring
string numarray|numstring yshow –
Paint glyphs for string using y widths in numarray|numstring
name|cid glyphshow –
Paint glyph for character identiﬁed by name|cid
string stringwidth wx w y
Return width of glyphs for string in current font
proc string cshow –
Invoke character mapping algorithm and call proc
proc string kshow –
Execute proc between characters shown from
string
– FontDirectory dict
Return dictionary of Font resource instances
– GlobalFontDirectory dict
Return dictionary of Font resource instances
in global VM
– StandardEncoding array
Return Adobe standard font encoding vector
– ISOLatin1Encoding array
Return ISO Latin-1 font encoding vector
key ﬁndencoding array
Find encoding vector
w x w y llx lly ur x ur y setcachedevice –
Declare cached glyph metrics
w0 x w0y llx lly ur x ur y
w1x w1y vx v y setcachedevice2 –
Declare cached glyph metrics
wx w y setcharwidth –
Declare uncached glyph metrics

## Interpreter Parameter Operators
dict setsystemparams –
Set systemwide interpreter parameters
– currentsystemparams dict
Return systemwide interpreter parameters
dict setuserparams –
Set per-context interpreter parameters
– currentuserparams dict
Return per-context interpreter parameters
string dict setdevparams –
Set parameters for input/output device
string currentdevparams dict
Return device parameters
int vmreclaim –
Control garbage collector
int setvmthreshold –
Control garbage collector
– vmstatus level used maximum
Report VM status
– cachestatus bsize bmax msize mmax csize cmax blimit
Return font cache status and parameters
int setcachelimit –
Set maximum bytes in cached glyph
mark size lower upper setcacheparams –
Set font cache parameters
– currentcacheparams mark size lower upper
Return current font cache parameters
mark blimit setucacheparams –
Set user path cache parameters
– ucachestatus mark bsize bmax rsize rmax blimit
Return user path cache status and parameters
